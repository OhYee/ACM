/* GBK */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_Num 30                  //字典数据最大个数
#define MAX_LENGTH 50               //单词、汉字最长长度
#define FILE_NAME "Dictionary.db"   //字典数据库文件名
#define bool int                    //兼容不能使用bool的编译器
#define true 1
#define false 0

int i,j;                            //循环用变量
int Num;                            //单词数目
char English[MAX_Num][MAX_LENGTH];  //英语
char Chinese[MAX_Num][MAX_LENGTH];  //中文

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          UI_Head
// 功能:          显示顶部菜单
// 算法:          
// 参数:          
// 返回:          
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
void UI_Head(){
    system("cls");
    printf("--------------------------\n");
    printf("         词库系统\n");
    printf("--------------------------\n");
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          PressAnyKeyToContinue
// 功能:          等待用户输入后继续
// 算法:          
// 参数:          
// 返回:          
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
void PressAnyKeyToContinue(){
    printf("按下任意键返回\n");
    rewind(stdin);
    getchar();
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          YorN
// 功能:          对用户输入的`Y`,`y`,`N`,`n`进行判断,用于确认操作
// 算法:          
// 参数:          
// 返回:          返回真或(true)者假(false)
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
bool YorN(){
    char c;
    rewind(stdin);
    while(1){
        printf("Y/N: ");
        c=getchar();
        if(c=='Y'||c=='y'||c=='N'||c=='n')
            break;
    }
    if(c=='Y'||c=='y')
        return true;
    else
        return false;
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          Init
// 功能:          初始化变量
// 算法:          
// 参数:          
// 返回:          
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
void Init(){
    Num = 0;
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          ReadFromFile
// 功能:          从文件读入字典数据
// 算法:          
// 参数:          
// 返回:          是否成功打开文件
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
bool ReadFromFile(){
    FILE* f;
    f = fopen(FILE_NAME,"r");
    if(!f)
        return false;
    while(fscanf(f,"%s %s",English[Num],Chinese[Num])!=EOF)
        Num++;
    fclose(f);
    return true;
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          SaveToFile
// 功能:          保存到文件
// 算法:          
// 参数:          
// 返回:          是否成功打开文件
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
bool SaveToFile(){
    FILE* f;
    f = fopen(FILE_NAME,"w");
    if(!f)
        return false;
    for(i=0;i<Num;i++)
        fprintf(f,"%s %s\n",English[i],Chinese[i]);
    fclose(f);
    return true;
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          UI_ShowAll
// 功能:          显示所有单词
// 算法:          
// 参数:          
// 返回:          
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
void UI_ShowAll(){
    UI_Head();
    printf("显示所有单词\n");
    for(i=0;i<Num;i++)
        printf("%d.%s %s\n",i+1,English[i],Chinese[i]);
    PressAnyKeyToContinue();
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          InsertNew
// 功能:          插入新单词的后台部分
// 算法:          
// 参数:          char *En,char *Cn
// 返回:          是否成功插入(是否超过最大单词存储数目)
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
bool InsertNew(char *En,char *Cn){
    if(Num==MAX_Num)
        return false;
    strcpy(English[Num],En);
    strcpy(Chinese[Num],Cn);
    Num++;
    return true;
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          UI_InsertNew
// 功能:          插入新单词的界面部分,用于用户交互读入数据
// 算法:          
// 参数:          
// 返回:          
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
void UI_InsertNew(){
    char En[MAX_LENGTH],Cn[MAX_LENGTH];
    UI_Head();
    printf("插入新单词\n");
    printf("请输入单词(英语):");
    scanf("%s",En);
    printf("请输入中文释义:");
    scanf("%s",Cn);
    if(InsertNew(En,Cn)==true)
        printf("插入成功\n");
    else
        printf("插入失败,已达到最大单词数目\n");
    PressAnyKeyToContinue();
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          Search
// 功能:          查找单词
// 算法:          顺序查找
// 参数:          char *Word
// 返回:          返回单词的下标（不存在返回-1）
// 注意事项:      如果有相同数据会返回第一个
///////////////////////////////////////////////////////////////////////////////////////
int Search(char *Word){
    for(int i=0;i<Num;i++){
        if(strcmp(Word,Chinese[i])==0 || strcmp(Word,English[i])==0)
            return i;
    }
    return -1;
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          _UI_Search
// 功能:          查找单词，用户交互读入数据部分
// 算法:          
// 参数:          
// 返回:          返回下标（不存在返回-1）
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
int _UI_Search(){
    char Temp[MAX_LENGTH];
    printf("查找单词\n");
    printf("请输入单词或中文释义:");
    scanf("%s",Temp);
    return Search(Temp);
}
///////////////////////////////////////////////////////////////////////////////////////
// 名称:          UI_Search
// 功能:          查找单词，查找完毕后的用户交互
// 算法:          
// 参数:          
// 返回:          
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
void UI_Search(){
    int pos;
    UI_Head();
    if((pos=_UI_Search())==-1)
        printf("未找到单词");
    else
        printf("英语:%s\n中文:%s\n",English[pos],Chinese[pos]);
    PressAnyKeyToContinue();
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          Delete
// 功能:          删除单词
// 算法:          
// 参数:          int pos（下标）
// 返回:          
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
void Delete(int pos){
    for(i=pos;i<Num-1;i++){
        strcpy(English[i],English[i+1]);
        strcpy(Chinese[i],Chinese[i+1]);
    }
    Num--;
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          UI_Delete
// 功能:          删除单词的交互部分
// 算法:          
// 参数:          
// 返回:          
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
void UI_Delete(){
    int pos;
    UI_Head();
    printf("删除单词\n");
    printf("请先查找到需要删除的单词\n");
    pos = _UI_Search();
    if(pos==-1){
        printf("未找到该单词\n");
    }else{
        printf("英语:%s\n中文:%s\n",English[pos],Chinese[pos]);
        printf("确定要删除该单词?");
        if(YorN()==true){
            Delete(pos);
            printf("删除成功\n");
        }else{
            printf("用户结束了删除操作\n");
        }
    }
    PressAnyKeyToContinue();
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          UI_Home
// 功能:          主菜单
// 算法:          
// 参数:          
// 返回:          是否继续运行
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
bool UI_Home(){
    char c;
    UI_Head();
    printf("选择您需要的功能\n");
    printf("1.显示所有单词\n");
    printf("2.插入新单词\n");
    printf("3.删除已有单词\n");
    printf("4.查询单词\n");
    printf("5.退出\n");
    printf("--------------------------\n");
    printf("请输入功能项前的序号:");
    rewind(stdin);
    c=getchar();
    switch(c){
        case '1':{
            UI_ShowAll();
            break;
        }
        case '2':{
            UI_InsertNew();
            break;
        }
        case '3':{
            UI_Delete();
            break;
        }
        case '4':{
            UI_Search();
            break;
        }
        case '5':{
            printf("确定要退出?");
            if(YorN()==true)
                return false;
        }
    }
    return true;
}

///////////////////////////////////////////////////////////////////////////////////////
// 名称:          main
// 功能:          程序入口
// 算法:          
// 参数:          
// 返回:          结束码（0是正常结束，1是报错）
// 注意事项:      
///////////////////////////////////////////////////////////////////////////////////////
int main(){
    Init();
    if(!ReadFromFile()){
        printf("读入字典数据库失败\n");
        return 1;
    }
    
    while(UI_Home());
    
    system("cls");
    if(!SaveToFile()){
        printf("写入字典数据库失败\n");
        return 1;
    }
    printf("写入字典数据库完成\n");
    return 0;
}